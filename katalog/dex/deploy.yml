# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: dex
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list", "create"] # To manage its own resources, dex must be able to create customresourcedefinitions
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: dex
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dex
rules:
  - apiGroups: ["dex.coreos.com"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dex
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: dex
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: dex
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  labels:
    app: dex
spec:
  ports:
    - name: http
      port: 5556
      targetPort: http
    - name: metrics
      port: 5558
      targetPort: metrics
  selector:
    app: dex
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  labels:
    app: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      serviceAccountName: dex
      initContainers:
        - name: init-config
          image: busybox:stable
          command: ['sh', '-c', 'tar -xzvf /web-archive/web.tar.gz -C /app/web/']
          volumeMounts:
            - name: dex-web-custom-archive
              mountPath: /web-archive
            - name: dex-web-custom
              mountPath: /app/web
      containers:
        - name: dex
          image: ghcr.io/dexidp/dex:v2.41.1
          command:
            - /usr/local/bin/dex
            - serve
            - /etc/dex/cfg/config.yml
          ports:
            - name: http
              containerPort: 5556
            - name: metrics
              containerPort: 5558
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: metrics
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: metrics
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 250m
              memory: 200Mi
          volumeMounts:
            - name: config
              mountPath: /etc/dex/cfg
            - name: dex-web-custom-archive
              mountPath: /web-archive
            - name: dex-web-custom
              mountPath: /app/web
      volumes:
        - name: config
          secret:
            secretName: dex
        - name: dex-web-custom-archive
          configMap:
            name: dex-web-custom-archive
        - name: dex-web-custom
          emptyDir: {}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: dex
  name: dex
spec:
  endpoints:
    - interval: 30s
      port: metrics
      path: /metrics
      honorLabels: false
  jobLabel: dex
  namespaceSelector:
    matchNames:
      - kube-system
  selector:
    matchLabels:
      app: dex
